{"version":3,"sources":["webpack:///fenix-ui-filter-utils.min.js","webpack:///webpack/bootstrap fe9ff8bdedc9d50b0b8e","webpack:///./src/js/index.js","webpack:///./src/config/errors.js","webpack:///./src/config/config.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"loglevel\"","webpack:///external \"handlebars\""],"names":["define","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","ERR","C","$","_","log","Handlebars","Utils","this","prototype","compileFilter","values","items","extend","config","formatConfig","format","template","output","compileTemplate","tmpl","key","dimension","toLocaleLowerCase","createTimeFilter","createEnumerationFilter","warn","model","cl","codes","join","error","uid","compile","process","JSON","parse","each","obj","version","v","time","valuesAreObject","from","findWhere","parent","to","couple","value","push","map","a","parseInt","sort","b","i","enumeration","cleanArray","actual","newArray","length","createConfiguration","o","info","lang","configuration","_isFenixResource","metadata","dsd","columns","bind","contains","forbiddenSubjects","subject","exclude","endsWith","toUpperCase","_processFxColumn","common","INVALID_FENIX_RESOURCE","mergeConfigurations","s","sync","toolbar","hasOwnProperty","selector","conf","_isFenixColumn","dataType","toLowerCase","_processCustomCodeColumn","_processEnumerationColumn","_processCodeColumn","_processDateColumn","_processMonthColumn","_processYearColumn","_processTimeColumn","_processTextColumn","_processLabelColumn","_processNumberColumn","_processPercentageColumn","_processBooleanColumn","UNKNOWN_FENIX_COLUMN_DATATYPE","INVALID_FENIX_COLUMN","_commonProcessColumn","_configTreeFromSource","domain","hideFilter","source","label","_configTreeFromCodelist","period","timelist","timeList","_configTimeFromPeriod","_configTreeFromTimelist","_configTemporalColumn","_configInput","type","title","Array","isArray","idCodeList","lazy","code","_configDropdownFromPeriod","_configTreeFromPeriod","_configDropdownFromTimelist","_getTimeFormat","Moment","_getTimeLabelFormat","_configDropdownFromSource","_configDropdownFromCodelist","String","_configRangeFromPeriod","min","max","prettify_enabled","defaultPeriodFrom","defaultPeriodTo","timeLabelFormat","res","valid","errors","resourceType","getNestedProperty","INVALID_METADATA","INVALID_DSD","INVALID_COLUMNS","INVALID_COLUMN_DATATYPE","assign","prop","split","e","shift","Object","toString","path","arr","apply","undefined","prefix"],"mappings":"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","file":"fenix-ui-filter-utils.min.js","sourcesContent":["define([\"jquery\",\"underscore\",\"loglevel\",\"handlebars\"], function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t\t__webpack_require__(2),\r\n\t\t__webpack_require__(3),\r\n\t\t__webpack_require__(4),\r\n\t\t__webpack_require__(5),\r\n\t\t__webpack_require__(6),\r\n\t\t__webpack_require__(7)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function (ERR, C, $, _, log, Handlebars) {\r\n\t\r\n\t\t'use strict';\r\n\t\r\n\t\tfunction Utils() {\r\n\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\r\n\t\t//FENIX\r\n\t\r\n\t\tUtils.prototype.compileFilter = function (id, values, items) {\r\n\t\r\n\t\t\t$.extend(true, this, C);\r\n\t\r\n\t\t\tvar config = items[id] || {},\r\n\t\t\t\tformatConfig = config.format || {},\r\n\t\t\t\ttemplate = formatConfig.template,\r\n\t\t\t\toutput = formatConfig.output || \"codes\";\r\n\t\r\n\t\t\tif (template) {\r\n\t\t\t\treturn this.compileTemplate(id, values, config, template);\r\n\t\t\t}\r\n\t\r\n\t\t\tvar key = formatConfig.dimension || id,\r\n\t\t\t\ttmpl;\r\n\t\r\n\t\t\tswitch (output.toLocaleLowerCase()) {\r\n\t\t\t\tcase \"codes\" :\r\n\t\r\n\t\t\t\t\ttmpl = '{ \"codes\":[{\"uid\": \"{{{uid}}}\", \"version\": \"{{version}}\", \"codes\": [{{{codes}}}] } ]}';\r\n\t\t\t\t\treturn this.compileTemplate(id, values, config, key, tmpl);\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"time\" :\r\n\t\r\n\t\t\t\t\treturn this.createTimeFilter(id, values, config, key);\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase \"enumeration\" :\r\n\t\r\n\t\t\t\t\treturn this.createEnumerationFilter(id, values, config, key);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tlog.warn(id + \" not included in the result set. Missing format configuration.\");\r\n\t\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype.compileTemplate = function (id, values, config, key, template) {\r\n\t\r\n\t\t\t/*\r\n\t\t\t Priority\r\n\t\t\t - values\r\n\t\t\t - format configuration\r\n\t\t\t - code list configuration\r\n\t\t\t */\r\n\t\r\n\t\t\tvar model = $.extend(true, config.cl, config.format, {codes: '\"' + values.join('\",\"') + '\"'});\r\n\t\r\n\t\t\tif (!template) {\r\n\t\t\t\tlog.error(\"Impossible to find '\" + id + \"' process template. Check your '\" + id + \"'.filter.process configuration.\")\r\n\t\t\t}\r\n\t\r\n\t\t\tif (!model.uid) {\r\n\t\t\t\tlog.error(\"Impossible to find '\" + id + \"' code list configuration for FENIX output format export.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar tmpl = Handlebars.compile(template),\r\n\t\t\t\tprocess = JSON.parse(tmpl(model)),\r\n\t\t\t\tcodes = process.codes;\r\n\t\r\n\t\t\t//Remove empty version attributes\r\n\t\t\t_.each(codes, function (obj) {\r\n\t\t\t\tif (!obj.version) {\r\n\t\t\t\t\tdelete obj.version;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\treturn process;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype.createTimeFilter = function (id, values, config, key) {\r\n\t\r\n\t\t\tvar time = [],\r\n\t\t\t\tvaluesAreObject = typeof values[0] === 'object',\r\n\t\t\t\tv;\r\n\t\r\n\t\t\tif (valuesAreObject) {\r\n\t\r\n\t\t\t\tvar from = _.findWhere(values, {parent: \"from\"}) || {},\r\n\t\t\t\t\tto = _.findWhere(values, {parent: \"to\"}) || {},\r\n\t\t\t\t\tcouple = {from: null, to: null};\r\n\t\r\n\t\t\t\tcouple.from = from.value;\r\n\t\t\t\tcouple.to = to.value;\r\n\t\r\n\t\t\t\ttime.push($.extend({}, couple));\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tv = values.map(function (a) {\r\n\t\t\t\t\treturn parseInt(a, 10);\r\n\t\t\t\t}).sort(function (a, b) {\r\n\t\t\t\t\treturn a - b;\r\n\t\t\t\t});\r\n\t\r\n\t\r\n\t\t\t\t_.each(v, function (i) {\r\n\t\t\t\t\ttime.push({from: i, to: i});\r\n\t\t\t\t});\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn {time: time};\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype.createEnumerationFilter = function (id, values, config, key) {\r\n\t\r\n\t\t\treturn {enumeration: values};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype.cleanArray = function (actual) {\r\n\t\t\tvar newArray = [];\r\n\t\t\tfor (var i = 0; i < actual.length; i++) {\r\n\t\t\t\tif (actual[i]) {\r\n\t\t\t\t\tnewArray.push(actual[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn newArray;\r\n\t\t};\r\n\t\r\n\t\t/* FILTER UTILS */\r\n\t\r\n\t\t/**\r\n\t\t * Creates a FENIX filter configuration from a\r\n\t\t * FENIX resource\r\n\t\t * @param {Object} o\r\n\t\t * @return {Object} filter configuration\r\n\t\t */\r\n\t\tUtils.prototype.createConfiguration = function (o) {\r\n\t\t\tlog.info(\"Create filter configuration from:\");\r\n\t\t\tlog.info(o);\r\n\t\r\n\t\t\t$.extend(true, this, o);\r\n\t\r\n\t\t\tthis.lang = o.lang || C.lang;\r\n\t\r\n\t\t\tvar configuration = {};\r\n\t\r\n\t\t\tif (this._isFenixResource(o.model) === true) {\r\n\t\t\t\tlog.info(\"Valid resource\");\r\n\t\r\n\t\t\t\t_.each(o.model.metadata.dsd.columns, _.bind(function (c) {\r\n\t\r\n\t\t\t\t\tif (!_.contains(this.forbiddenSubjects, c.subject) && !_.contains(this.exclude, c.id) && !c.id.endsWith(\"_\" + this.lang.toUpperCase())) {\r\n\t\t\t\t\t\tconfiguration[c.id] = $.extend(true, {}, this._processFxColumn(c), this.common);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlog.warn(c.id + \" was excluded. [id: \" + c.id + \", subject: \" + c.subject + \"]\");\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, this));\r\n\t\r\n\t\t\t} else {\r\n\t\t\t\tlog.error(ERR.INVALID_FENIX_RESOURCE);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn configuration;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Merges a FENIX filter configuration with\r\n\t\t * default values\r\n\t\t * @param {Object} config\r\n\t\t * @param {Object} sync\r\n\t\t * @return {Object} filter configuration\r\n\t\t */\r\n\t\tUtils.prototype.mergeConfigurations = function (config, s) {\r\n\t\r\n\t\t\tvar sync = s.toolbar ? s.toolbar : s;\r\n\t\r\n\t\t\tif (sync) {\r\n\t\r\n\t\t\t\tvar values = sync.values;\r\n\t\r\n\t\t\t\t_.each(values, _.bind(function (obj, key) {\r\n\t\r\n\t\t\t\t\tif (config.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tconfig[key].selector.default = values[key];\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// private fns\r\n\t\r\n\t\tUtils.prototype._processFxColumn = function (c) {\r\n\t\r\n\t\t\tvar conf = {};\r\n\t\r\n\t\t\tif (this._isFenixColumn(c) === true) {\r\n\t\t\t\tlog.info(\"Valid column with dataType: \" + c.dataType.toLowerCase() + \" [column.id = \" + c.id + \" ]\");\r\n\t\r\n\t\t\t\tswitch (c.dataType.toLowerCase()) {\r\n\t\t\t\t\tcase \"customcode\" :\r\n\t\t\t\t\t\tconf = this._processCustomCodeColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"enumeration\" :\r\n\t\t\t\t\t\tconf = this._processEnumerationColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"code\" :\r\n\t\t\t\t\t\tconf = this._processCodeColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"date\" :\r\n\t\t\t\t\t\tconf = this._processDateColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"month\" :\r\n\t\t\t\t\t\tconf = this._processMonthColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"year\" :\r\n\t\t\t\t\t\tconf = this._processYearColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"time\" :\r\n\t\t\t\t\t\tconf = this._processTimeColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"text\" :\r\n\t\t\t\t\t\tconf = this._processTextColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"label\" :\r\n\t\t\t\t\t\tconf = this._processLabelColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"number\" :\r\n\t\t\t\t\t\tconf = this._processNumberColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"percentage\" :\r\n\t\t\t\t\t\tconf = this._processPercentageColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bool\" :\r\n\t\t\t\t\t\tconf = this._processBooleanColumn(c);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tlog.error(ERR.UNKNOWN_FENIX_COLUMN_DATATYPE, c.dataType.toLowerCase());\r\n\t\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlog.error(ERR.INVALID_FENIX_COLUMN);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn $.extend(true, {}, conf, this._commonProcessColumn(c));\r\n\t\t};\r\n\t\r\n\t\t/* processes for CODE FX column */\r\n\t\r\n\t\tUtils.prototype._processCustomCodeColumn = function (c) {\r\n\t\t\treturn this._configTreeFromSource(c);\r\n\t\t\t//return this._configDropdownFromSource(c);\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._processEnumerationColumn = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tenumeration = domain.enumeration || [];\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\t//html selector configuration\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"tree\";\r\n\t\t\tconfig.selector.hideFilter = true;\r\n\t\t\tconfig.selector.source = _.map(enumeration, function (obj) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: obj,\r\n\t\t\t\t\tlabel: obj\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\treturn config;\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._processCodeColumn = function (c) {\r\n\t\r\n\t\t\treturn this._configTreeFromCodelist(c);\r\n\t\t\t//return this._configDropdownFromCodelist(c);\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/* processes for TIME FX column */\r\n\t\r\n\t\tUtils.prototype._processDateColumn = function (c) {\r\n\t\r\n\t\t\tvar domain = c.domain || {},\r\n\t\t\t\tperiod = domain.period,\r\n\t\t\t\ttimelist = domain.timeList;\r\n\t\r\n\t\t\tif (period && period.from && period.to) {\r\n\t\t\t\t//return this._configRangeFromPeriod(c);\r\n\t\t\t\treturn this._configTimeFromPeriod(c);\r\n\t\t\t\t//return this._configDropdownFromPeriod(c);\r\n\t\t\t}\r\n\t\r\n\t\t\tif (timelist) {\r\n\t\t\t\t//return this._configDropdownFromTimelist(c);\r\n\t\t\t\treturn this._configTreeFromTimelist(c);\r\n\t\t\t}\r\n\t\r\n\t\t\tlog.warn(\"Impossible to find process for column \" + c.id);\r\n\t\r\n\t\t\treturn {};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._processMonthColumn = function (c) {\r\n\t\r\n\t\t\treturn this._configTemporalColumn(c);\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._processYearColumn = function (c) {\r\n\t\r\n\t\t\treturn this._configTemporalColumn(c);\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._processTimeColumn = function (c) {\r\n\t\r\n\t\t\treturn this._configTemporalColumn(c);\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/* processes for TEXT FX column */\r\n\t\r\n\t\tUtils.prototype._processTextColumn = function (c) {\r\n\t\r\n\t\t\treturn this._configInput(c, {type: \"text\"});\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._processLabelColumn = function (c) {\r\n\t\r\n\t\t\treturn this._configInput(c, {type: \"text\"});\r\n\t\t};\r\n\t\r\n\t\t/* processes for OTHER FX column */\r\n\t\r\n\t\tUtils.prototype._processNumberColumn = function (c) {\r\n\t\r\n\t\t\treturn this._configInput(c, {type: \"number\", output: \"time\"});\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._processPercentageColumn = function (c) {\r\n\t\t\tlog.warn(\"TODO process\");\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._processBooleanColumn = function (c) {\r\n\t\t\treturn this._configInput(c, {type: \"checkbox\"});\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/* Common processes */\r\n\t\r\n\t\tUtils.prototype._commonProcessColumn = function (c) {\r\n\t\r\n\t\t\tvar config = {\r\n\t\t\t\ttemplate: {},\r\n\t\t\t\tformat: {\r\n\t\t\t\t\tdimension: c.id\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\tif (c.title && c.title[this.lang.toUpperCase()]) {\r\n\t\t\t\tconfig.template.title = c.title[this.lang.toUpperCase()];\r\n\t\t\t}\r\n\t\r\n\t\t\treturn config;\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configTreeFromCodelist = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tcodes = domain.codes,\r\n\t\t\t\tcl;\r\n\t\r\n\t\t\tif (!Array.isArray(codes) || codes.length > 1) {\r\n\t\t\t\tlog.warn(\"Invalid domain.codes attributes\");\r\n\t\t\t}\r\n\t\r\n\t\t\tcl = codes[0];\r\n\t\r\n\t\t\tif (!cl.idCodeList) {\r\n\t\t\t\tlog.error(\"Impossible to find idCodeList\");\r\n\t\t\t}\r\n\t\r\n\t\t\t//configure code list\r\n\t\t\tconfig.cl = {};\r\n\t\t\tconfig.cl.uid = cl.idCodeList;\r\n\t\t\tconfig.cl.version = cl.version;\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\t//html selector configuration\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"tree\";\r\n\t\t\tconfig.selector.lazy = true;\r\n\t\t\tconfig.selector.hideFilter = true;\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configTreeFromSource = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tcodes = domain.codes,\r\n\t\t\t\tcl;\r\n\t\r\n\t\t\tif (!Array.isArray(codes) || codes.length > 1) {\r\n\t\t\t\tlog.warn(\"Invalid domain.codes attributes\");\r\n\t\t\t}\r\n\t\r\n\t\t\tcl = codes[0];\r\n\t\r\n\t\t\tif (!cl.codes) {\r\n\t\t\t\tlog.error(\"Impossible to find codes\");\r\n\t\t\t}\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\t//html selector configuration\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"tree\";\r\n\t\t\tconfig.selector.source = _.map(cl.codes, _.bind(function (obj) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: obj.code,\r\n\t\t\t\t\tlabel: obj.label[this.lang.toUpperCase()]\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tconfig.selector.hideFilter = true;\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configDropdownFromPeriod = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tperiod = domain.period;\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\t//html selector configuration\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"dropdown\";\r\n\t\t\tconfig.selector.from = period.from;\r\n\t\t\tconfig.selector.to = period.to;\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configTreeFromPeriod = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tperiod = domain.period;\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\t//html selector configuration\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"tree\";\r\n\t\t\tconfig.selector.from = period.from;\r\n\t\t\tconfig.selector.to = period.to;\r\n\t\t\tconfig.selector.hideFilter = true;\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configDropdownFromTimelist = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\ttimelist = domain.timeList || [],\r\n\t\t\t\tformat = this._getTimeFormat(timelist[0]);\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"dropdown\";\r\n\t\t\tconfig.selector.source = _.map(timelist, _.bind(function (obj) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: obj,\r\n\t\t\t\t\tlabel: new Moment(obj, format).format(this._getTimeLabelFormat(obj))\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configTreeFromTimelist = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\ttimelist = domain.timeList || [],\r\n\t\t\t\tformat = this._getTimeFormat(timelist[0]);\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"tree\";\r\n\t\t\tconfig.selector.source = _.map(timelist, _.bind(function (obj) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: obj,\r\n\t\t\t\t\tlabel: new Moment(obj, format).format(this._getTimeLabelFormat(obj))\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tconfig.selector.hideFilter = true;\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configDropdownFromSource = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tcodes = domain.codes,\r\n\t\t\t\tcl;\r\n\t\r\n\t\t\tif (!Array.isArray(codes) || codes.length > 1) {\r\n\t\t\t\tlog.warn(\"Invalid domain.codes attributes\");\r\n\t\t\t}\r\n\t\r\n\t\t\tcl = codes[0];\r\n\t\r\n\t\t\tif (!cl.codes) {\r\n\t\t\t\tlog.error(\"Impossible to find codes\");\r\n\t\t\t}\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\t//html selector configuration\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"dropdown\";\r\n\t\t\tconfig.selector.source = _.map(cl.codes, _.bind(function (obj) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: obj.code,\r\n\t\t\t\t\tlabel: obj.label[this.lang.toUpperCase()]\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configDropdownFromCodelist = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tcodes = domain.codes,\r\n\t\t\t\tcl;\r\n\t\r\n\t\t\tif (!Array.isArray(codes) || codes.length > 1) {\r\n\t\t\t\tlog.warn(\"Invalid domain.codes attributes\");\r\n\t\t\t}\r\n\t\r\n\t\t\tcl = codes[0];\r\n\t\r\n\t\t\tif (!cl.idCodeList) {\r\n\t\t\t\tlog.error(\"Impossible to find idCodeList\");\r\n\t\t\t}\r\n\t\r\n\t\t\t//configure code list\r\n\t\t\tconfig.cl = {};\r\n\t\t\tconfig.cl.uid = cl.idCodeList;\r\n\t\t\tconfig.cl.version = cl.version;\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\t//html selector configuration\r\n\t\t\tconfig.selector = {};\r\n\t\t\tconfig.selector.id = \"dropdown\";\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configTimeFromPeriod = function (c) {\r\n\t\r\n\t\t\t/* ~~~~~~ Selector time\r\n\t\t\t var config = {},\r\n\t\t\t domain = c.domain || {},\r\n\t\t\t period = domain.period,\r\n\t\t\t from = String(period.from),\r\n\t\t\t to = String(period.to),\r\n\t\t\t //from = String(period.from).substring(0, String(period.from).length - 2),\r\n\t\t\t //to = String(period.to).substring(0, String(period.to).length - 2),\r\n\t\t\t format = this._getTimeFormat(from);\r\n\t\r\n\t\t\t //configure selector\r\n\t\t\t config.selector = {\r\n\t\t\t config: {}\r\n\t\t\t };\r\n\t\t\t config.selector.id = \"time\";\r\n\t\t\t config.selector.config.minDate = new Moment(from, format);\r\n\t\t\t config.selector.config.maxDate = new Moment(to, format);\r\n\t\t\t config.selector.config.format = this._getTimeLabelFormat(from);\r\n\t\r\n\t\t\t if (from.length < 5) {\r\n\t\t\t config.selector.config.viewMode = \"years\";\r\n\t\t\t }\r\n\t\r\n\t\t\t config.format = {\r\n\t\t\t output : \"time\"\r\n\t\t\t };\r\n\t\t\t */\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tperiod = domain.period,\r\n\t\t\t\tfrom = String(period.from),\r\n\t\t\t\tto = String(period.to);\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\tconfig.selector = {\r\n\t\t\t\tconfig: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tconfig.selector.id = \"tree\";\r\n\t\t\tconfig.selector.from = parseInt(from, 10);\r\n\t\t\tconfig.selector.to = parseInt(to, 10);\r\n\t\t\tconfig.selector.hideFilter = true;\r\n\t\t\tconfig.format = {\r\n\t\t\t\toutput: \"time\"\r\n\t\t\t};\r\n\t\r\n\t\t\treturn config;\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configRangeFromPeriod = function (c) {\r\n\t\r\n\t\t\tvar config = {},\r\n\t\t\t\tdomain = c.domain || {},\r\n\t\t\t\tperiod = domain.period;\r\n\t\r\n\t\t\t//configure selector\r\n\t\t\tconfig.selector = {\r\n\t\t\t\tconfig: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tconfig.selector.id = \"range\";\r\n\t\t\tconfig.selector.config.min = period.from;\r\n\t\t\tconfig.selector.config.max = period.to;\r\n\t\t\tconfig.selector.config.type = \"double\";\r\n\t\t\tconfig.selector.config.prettify_enabled = false;\r\n\t\r\n\t\t\treturn config;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configInput = function (c, o) {\r\n\t\r\n\t\t\tvar config = {\r\n\t\t\t\tselector: {},\r\n\t\t\t\tformat: {\r\n\t\t\t\t\toutput: o.output || \"enumeration\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\tconfig.selector.id = \"input\";\r\n\t\t\tconfig.selector.type = o.type || \"text\";\r\n\t\r\n\t\t\treturn config;\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._configTemporalColumn = function (c) {\r\n\t\r\n\t\t\tvar domain = c.domain || {},\r\n\t\t\t\tperiod = domain.period,\r\n\t\t\t\ttimelist = domain.timeList;\r\n\t\r\n\t\t\tif (period && period.from && period.to) {\r\n\t\t\t\t//return this._configRangeFromPeriod(c);\r\n\t\t\t\t//return this._configTimeFromPeriod(c);\r\n\t\t\t\t//return this._configDropdownFromPeriod(c);\r\n\t\t\t\treturn this._configTreeFromPeriod(c);\r\n\t\t\t}\r\n\t\r\n\t\t\tif (timelist) {\r\n\t\t\t\t//return this._configDropdownFromTimelist(c);\r\n\t\t\t\treturn this._configTreeFromTimelist(c);\r\n\t\t\t}\r\n\t\r\n\t\t\t//Default set year range\r\n\t\t\tlog.warn(\"Column \" + c.id + \" set with default time period range.\");\r\n\t\r\n\t\t\tc.domain = {\r\n\t\t\t\tperiod: {\r\n\t\t\t\t\tfrom: C.defaultPeriodFrom,\r\n\t\t\t\t\tto: C.defaultPeriodTo\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\treturn this._configTimeFromPeriod(c);\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._getTimeFormat = function (s) {\r\n\t\r\n\t\t\tvar format;\r\n\t\r\n\t\t\tswitch (String(s).length) {\r\n\t\t\t\tcase 4 :\r\n\t\t\t\t\tformat = \"YYYY\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tformat = \"YYYY MM\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tformat = \"YYYY MM DD\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 12:\r\n\t\t\t\t\tformat = \"YYYY MM DD hh mm\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 14:\r\n\t\t\t\t\tformat = \"YYYY MM DD hh mm ss\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlog.warn(\"Impossible to find time format for: \" + format);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn format;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._getTimeLabelFormat = function (s) {\r\n\t\r\n\t\t\tif (this.timeLabelFormat) {\r\n\t\t\t\treturn this.timeLabelFormat;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar format;\r\n\t\r\n\t\t\tswitch (String(s).length) {\r\n\t\t\t\tcase 4 :\r\n\t\t\t\t\tformat = \"YYYY\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tformat = \"L\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tformat = \"L\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 14:\r\n\t\t\t\t\tformat = \"lll\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlog.warn(\"Impossible to find time label format for: \" + format);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn format;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/*   /!* Revert Process *!/\r\n\t\t /!**\r\n\t\t * Extracts a blank selection from FENIX process\r\n\t\t * default values\r\n\t\t * @param {Object} filter\r\n\t\t * @return {Object} filter configuration\r\n\t\t *!/\r\n\t\t Utils.prototype.revertProcess = function (filter) {\r\n\t\r\n\t\t var configuration = {};\r\n\t\r\n\t\t if (Array.isArray(filter)) {\r\n\t\r\n\t\t _.each(filter, _.bind(function ( step ) {\r\n\t\r\n\t\t var fn = \"_revert_\" + step.name;\r\n\t\r\n\t\t if ( $.isFunction(this[fn]) && step.parameters) {\r\n\t\t configuration[step.name] = $.extend(true, this[fn](step));\r\n\t\t } else {\r\n\t\t log.error(fn + \" is not a valid reverse function\");\r\n\t\t }\r\n\t\r\n\t\t }, this));\r\n\t\t }\r\n\t\r\n\t\t return configuration;\r\n\t\r\n\t\t };\r\n\t\r\n\t\t Utils.prototype._revert_filter = function (step) {\r\n\t\t log.info(\"_revert_filter \" + JSON.stringify(step));\r\n\t\r\n\t\t var self = this,\r\n\t\t result = {},\r\n\t\t parameters = step.parameters,\r\n\t\t rows = parameters.rows,\r\n\t\t columns = parameters.columns;\r\n\t\r\n\t\t _.each(rows, function ( obj , key) {\r\n\t\r\n\t\t if ( obj.time ) {\r\n\t\t result[key] = self._revert_time_row(obj);\r\n\t\t } else {\r\n\t\t result[key] = self._revert_codes_row(obj);\r\n\t\t }\r\n\t\r\n\t\t });\r\n\t\r\n\t\t return result;\r\n\t\t };\r\n\t\r\n\t\t Utils.prototype._revert_time_row = function ( step ) {\r\n\t\r\n\t\t console.log(step)\r\n\t\r\n\t\t };\r\n\t\r\n\t\t Utils.prototype._revert_codes_row = function ( step ) {\r\n\t\r\n\t\t console.log(step)\r\n\t\r\n\t\r\n\t\t };\r\n\t\r\n\t\t Utils.prototype._revert_group = function (step) {\r\n\t\t log.info(\"_revert_group \" + JSON.stringify(step));\r\n\t\r\n\t\r\n\t\t return;\r\n\t\t };\r\n\t\r\n\t\t Utils.prototype._revert_order = function (step) {\r\n\t\t log.info(\"_revert_order \" + JSON.stringify(step));\r\n\t\r\n\t\t return;\r\n\t\t };\r\n\t\t */\r\n\t\t/* Validation */\r\n\t\r\n\t\tUtils.prototype._isFenixResource = function (res) {\r\n\t\r\n\t\t\tvar valid = true,\r\n\t\t\t\terrors = [],\r\n\t\t\t\tresourceType = this.getNestedProperty(\"metadata.meContent.resourceRepresentationType\", res);\r\n\t\r\n\t\t\tif (!res.hasOwnProperty(\"metadata\")) {\r\n\t\t\t\terrors.push({code: ERR.INVALID_METADATA});\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (valid && !res.metadata.hasOwnProperty(\"dsd\")) {\r\n\t\t\t\terrors.push({code: ERR.INVALID_DSD});\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\t\r\n\t\t\t//NOT need field for FENIX GEOGRAPHIC RESOURCE\r\n\t\t\tif (resourceType === \"dataset\" && valid && (!res.metadata.dsd.hasOwnProperty(\"columns\") || !Array.isArray(res.metadata.dsd.columns))) {\r\n\t\t\t\terrors.push({code: ERR.INVALID_COLUMNS});\r\n\t\t\t}\r\n\t\r\n\t\t\treturn errors.length > 0 ? errors : valid;\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype._isFenixColumn = function (c) {\r\n\t\r\n\t\t\tvar valid = true,\r\n\t\t\t\terrors = [];\r\n\t\r\n\t\t\tif (!c.hasOwnProperty(\"dataType\")) {\r\n\t\t\t\terrors.push({code: ERR.INVALID_COLUMN_DATATYPE});\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn errors.length > 0 ? errors : valid;\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype.assign = function (obj, prop, value) {\r\n\t\t\tif (typeof prop === \"string\")\r\n\t\t\t\tprop = prop.split(\".\");\r\n\t\r\n\t\t\tif (prop.length > 1) {\r\n\t\t\t\tvar e = prop.shift();\r\n\t\t\t\tthis.assign(obj[e] =\r\n\t\t\t\t\t\tObject.prototype.toString.call(obj[e]) === \"[object Object]\"\r\n\t\t\t\t\t\t\t? obj[e]\r\n\t\t\t\t\t\t\t: {},\r\n\t\t\t\t\tprop,\r\n\t\t\t\t\tvalue);\r\n\t\t\t} else {\r\n\t\t\t\tobj[prop[0]] = value;\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tUtils.prototype.getNestedProperty = function (path, obj) {\r\n\t\r\n\t\t\tvar obj = $.extend(true, {}, obj),\r\n\t\t\t\tarr = path.split(\".\");\r\n\t\r\n\t\t\twhile (arr.length && (obj = obj[arr.shift()]));\r\n\t\r\n\t\t\treturn obj;\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\treturn new Utils();\r\n\t\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\r\n\t    var define = require('amdefine')(module);\r\n\t}\r\n\t\r\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function ( ) {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    var prefix = \"\";\r\n\t\r\n\t    return {\r\n\t\r\n\t        //Utils\r\n\t        INVALID_FENIX_RESOURCE: prefix + \"invalid_fenix_resource\",\r\n\t        INVALID_METADATA: prefix + \"invalid_metadata\",\r\n\t        INVALID_DSD: prefix + \"invalid_dsd\",\r\n\t        INVALID_COLUMNS: prefix + \"invalid_dsd\",\r\n\t        INVALID_FENIX_COLUMN: prefix + \"invalid_fenix_column\",\r\n\t        INVALID_COLUMN_DATATYPE : prefix + \"invalid_column_datatype\",\r\n\t        UNKNOWN_FENIX_COLUMN_DATATYPE :prefix + \"unknown_fenix_column_datatype\",\r\n\t\r\n\t    };\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\r\n\t    var define = require('amdefine')(module);\r\n\t}\r\n\t\r\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    return {\r\n\t\r\n\t        forbiddenSubjects: [\"value\"],\r\n\t        exclude: [], //exclude id\r\n\t        common: {},\r\n\t        lang: 'EN',\r\n\t        defaultPeriodFrom: 1970,\r\n\t        defaultPeriodTo: 2017\r\n\t\r\n\t    }\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }\n/******/ ])});;\n\n\n/** WEBPACK FOOTER **\n ** fenix-ui-filter-utils.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fe9ff8bdedc9d50b0b8e\n **/","define([\r\n\t'../config/errors',\r\n\t'../config/config',\r\n\t'jquery',\r\n\t'underscore',\r\n\t'loglevel',\r\n\t'handlebars'\r\n], function (ERR, C, $, _, log, Handlebars) {\r\n\r\n\t'use strict';\r\n\r\n\tfunction Utils() {\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t//FENIX\r\n\r\n\tUtils.prototype.compileFilter = function (id, values, items) {\r\n\r\n\t\t$.extend(true, this, C);\r\n\r\n\t\tvar config = items[id] || {},\r\n\t\t\tformatConfig = config.format || {},\r\n\t\t\ttemplate = formatConfig.template,\r\n\t\t\toutput = formatConfig.output || \"codes\";\r\n\r\n\t\tif (template) {\r\n\t\t\treturn this.compileTemplate(id, values, config, template);\r\n\t\t}\r\n\r\n\t\tvar key = formatConfig.dimension || id,\r\n\t\t\ttmpl;\r\n\r\n\t\tswitch (output.toLocaleLowerCase()) {\r\n\t\t\tcase \"codes\" :\r\n\r\n\t\t\t\ttmpl = '{ \"codes\":[{\"uid\": \"{{{uid}}}\", \"version\": \"{{version}}\", \"codes\": [{{{codes}}}] } ]}';\r\n\t\t\t\treturn this.compileTemplate(id, values, config, key, tmpl);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"time\" :\r\n\r\n\t\t\t\treturn this.createTimeFilter(id, values, config, key);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"enumeration\" :\r\n\r\n\t\t\t\treturn this.createEnumerationFilter(id, values, config, key);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tlog.warn(id + \" not included in the result set. Missing format configuration.\");\r\n\t\t\t\treturn {};\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tUtils.prototype.compileTemplate = function (id, values, config, key, template) {\r\n\r\n\t\t/*\r\n\t\t Priority\r\n\t\t - values\r\n\t\t - format configuration\r\n\t\t - code list configuration\r\n\t\t */\r\n\r\n\t\tvar model = $.extend(true, config.cl, config.format, {codes: '\"' + values.join('\",\"') + '\"'});\r\n\r\n\t\tif (!template) {\r\n\t\t\tlog.error(\"Impossible to find '\" + id + \"' process template. Check your '\" + id + \"'.filter.process configuration.\")\r\n\t\t}\r\n\r\n\t\tif (!model.uid) {\r\n\t\t\tlog.error(\"Impossible to find '\" + id + \"' code list configuration for FENIX output format export.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tmpl = Handlebars.compile(template),\r\n\t\t\tprocess = JSON.parse(tmpl(model)),\r\n\t\t\tcodes = process.codes;\r\n\r\n\t\t//Remove empty version attributes\r\n\t\t_.each(codes, function (obj) {\r\n\t\t\tif (!obj.version) {\r\n\t\t\t\tdelete obj.version;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn process;\r\n\r\n\t};\r\n\r\n\tUtils.prototype.createTimeFilter = function (id, values, config, key) {\r\n\r\n\t\tvar time = [],\r\n\t\t\tvaluesAreObject = typeof values[0] === 'object',\r\n\t\t\tv;\r\n\r\n\t\tif (valuesAreObject) {\r\n\r\n\t\t\tvar from = _.findWhere(values, {parent: \"from\"}) || {},\r\n\t\t\t\tto = _.findWhere(values, {parent: \"to\"}) || {},\r\n\t\t\t\tcouple = {from: null, to: null};\r\n\r\n\t\t\tcouple.from = from.value;\r\n\t\t\tcouple.to = to.value;\r\n\r\n\t\t\ttime.push($.extend({}, couple));\r\n\r\n\t\t} else {\r\n\r\n\t\t\tv = values.map(function (a) {\r\n\t\t\t\treturn parseInt(a, 10);\r\n\t\t\t}).sort(function (a, b) {\r\n\t\t\t\treturn a - b;\r\n\t\t\t});\r\n\r\n\r\n\t\t\t_.each(v, function (i) {\r\n\t\t\t\ttime.push({from: i, to: i});\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn {time: time};\r\n\t};\r\n\r\n\tUtils.prototype.createEnumerationFilter = function (id, values, config, key) {\r\n\r\n\t\treturn {enumeration: values};\r\n\r\n\t};\r\n\r\n\tUtils.prototype.cleanArray = function (actual) {\r\n\t\tvar newArray = [];\r\n\t\tfor (var i = 0; i < actual.length; i++) {\r\n\t\t\tif (actual[i]) {\r\n\t\t\t\tnewArray.push(actual[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn newArray;\r\n\t};\r\n\r\n\t/* FILTER UTILS */\r\n\r\n\t/**\r\n\t * Creates a FENIX filter configuration from a\r\n\t * FENIX resource\r\n\t * @param {Object} o\r\n\t * @return {Object} filter configuration\r\n\t */\r\n\tUtils.prototype.createConfiguration = function (o) {\r\n\t\tlog.info(\"Create filter configuration from:\");\r\n\t\tlog.info(o);\r\n\r\n\t\t$.extend(true, this, o);\r\n\r\n\t\tthis.lang = o.lang || C.lang;\r\n\r\n\t\tvar configuration = {};\r\n\r\n\t\tif (this._isFenixResource(o.model) === true) {\r\n\t\t\tlog.info(\"Valid resource\");\r\n\r\n\t\t\t_.each(o.model.metadata.dsd.columns, _.bind(function (c) {\r\n\r\n\t\t\t\tif (!_.contains(this.forbiddenSubjects, c.subject) && !_.contains(this.exclude, c.id) && !c.id.endsWith(\"_\" + this.lang.toUpperCase())) {\r\n\t\t\t\t\tconfiguration[c.id] = $.extend(true, {}, this._processFxColumn(c), this.common);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlog.warn(c.id + \" was excluded. [id: \" + c.id + \", subject: \" + c.subject + \"]\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}, this));\r\n\r\n\t\t} else {\r\n\t\t\tlog.error(ERR.INVALID_FENIX_RESOURCE);\r\n\t\t}\r\n\r\n\t\treturn configuration;\r\n\t};\r\n\r\n\t/**\r\n\t * Merges a FENIX filter configuration with\r\n\t * default values\r\n\t * @param {Object} config\r\n\t * @param {Object} sync\r\n\t * @return {Object} filter configuration\r\n\t */\r\n\tUtils.prototype.mergeConfigurations = function (config, s) {\r\n\r\n\t\tvar sync = s.toolbar ? s.toolbar : s;\r\n\r\n\t\tif (sync) {\r\n\r\n\t\t\tvar values = sync.values;\r\n\r\n\t\t\t_.each(values, _.bind(function (obj, key) {\r\n\r\n\t\t\t\tif (config.hasOwnProperty(key)) {\r\n\t\t\t\t\tconfig[key].selector.default = values[key];\r\n\t\t\t\t}\r\n\r\n\t\t\t}, this));\r\n\t\t}\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\t// private fns\r\n\r\n\tUtils.prototype._processFxColumn = function (c) {\r\n\r\n\t\tvar conf = {};\r\n\r\n\t\tif (this._isFenixColumn(c) === true) {\r\n\t\t\tlog.info(\"Valid column with dataType: \" + c.dataType.toLowerCase() + \" [column.id = \" + c.id + \" ]\");\r\n\r\n\t\t\tswitch (c.dataType.toLowerCase()) {\r\n\t\t\t\tcase \"customcode\" :\r\n\t\t\t\t\tconf = this._processCustomCodeColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"enumeration\" :\r\n\t\t\t\t\tconf = this._processEnumerationColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"code\" :\r\n\t\t\t\t\tconf = this._processCodeColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"date\" :\r\n\t\t\t\t\tconf = this._processDateColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"month\" :\r\n\t\t\t\t\tconf = this._processMonthColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"year\" :\r\n\t\t\t\t\tconf = this._processYearColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"time\" :\r\n\t\t\t\t\tconf = this._processTimeColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"text\" :\r\n\t\t\t\t\tconf = this._processTextColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"label\" :\r\n\t\t\t\t\tconf = this._processLabelColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"number\" :\r\n\t\t\t\t\tconf = this._processNumberColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"percentage\" :\r\n\t\t\t\t\tconf = this._processPercentageColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bool\" :\r\n\t\t\t\t\tconf = this._processBooleanColumn(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlog.error(ERR.UNKNOWN_FENIX_COLUMN_DATATYPE, c.dataType.toLowerCase());\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlog.error(ERR.INVALID_FENIX_COLUMN);\r\n\t\t}\r\n\r\n\t\treturn $.extend(true, {}, conf, this._commonProcessColumn(c));\r\n\t};\r\n\r\n\t/* processes for CODE FX column */\r\n\r\n\tUtils.prototype._processCustomCodeColumn = function (c) {\r\n\t\treturn this._configTreeFromSource(c);\r\n\t\t//return this._configDropdownFromSource(c);\r\n\t};\r\n\r\n\tUtils.prototype._processEnumerationColumn = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tenumeration = domain.enumeration || [];\r\n\r\n\t\t//configure selector\r\n\t\t//html selector configuration\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"tree\";\r\n\t\tconfig.selector.hideFilter = true;\r\n\t\tconfig.selector.source = _.map(enumeration, function (obj) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: obj,\r\n\t\t\t\tlabel: obj\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn config;\r\n\t};\r\n\r\n\tUtils.prototype._processCodeColumn = function (c) {\r\n\r\n\t\treturn this._configTreeFromCodelist(c);\r\n\t\t//return this._configDropdownFromCodelist(c);\r\n\r\n\t};\r\n\r\n\t/* processes for TIME FX column */\r\n\r\n\tUtils.prototype._processDateColumn = function (c) {\r\n\r\n\t\tvar domain = c.domain || {},\r\n\t\t\tperiod = domain.period,\r\n\t\t\ttimelist = domain.timeList;\r\n\r\n\t\tif (period && period.from && period.to) {\r\n\t\t\t//return this._configRangeFromPeriod(c);\r\n\t\t\treturn this._configTimeFromPeriod(c);\r\n\t\t\t//return this._configDropdownFromPeriod(c);\r\n\t\t}\r\n\r\n\t\tif (timelist) {\r\n\t\t\t//return this._configDropdownFromTimelist(c);\r\n\t\t\treturn this._configTreeFromTimelist(c);\r\n\t\t}\r\n\r\n\t\tlog.warn(\"Impossible to find process for column \" + c.id);\r\n\r\n\t\treturn {};\r\n\r\n\t};\r\n\r\n\tUtils.prototype._processMonthColumn = function (c) {\r\n\r\n\t\treturn this._configTemporalColumn(c);\r\n\t};\r\n\r\n\tUtils.prototype._processYearColumn = function (c) {\r\n\r\n\t\treturn this._configTemporalColumn(c);\r\n\t};\r\n\r\n\tUtils.prototype._processTimeColumn = function (c) {\r\n\r\n\t\treturn this._configTemporalColumn(c);\r\n\r\n\t};\r\n\r\n\t/* processes for TEXT FX column */\r\n\r\n\tUtils.prototype._processTextColumn = function (c) {\r\n\r\n\t\treturn this._configInput(c, {type: \"text\"});\r\n\t};\r\n\r\n\tUtils.prototype._processLabelColumn = function (c) {\r\n\r\n\t\treturn this._configInput(c, {type: \"text\"});\r\n\t};\r\n\r\n\t/* processes for OTHER FX column */\r\n\r\n\tUtils.prototype._processNumberColumn = function (c) {\r\n\r\n\t\treturn this._configInput(c, {type: \"number\", output: \"time\"});\r\n\t};\r\n\r\n\tUtils.prototype._processPercentageColumn = function (c) {\r\n\t\tlog.warn(\"TODO process\");\r\n\t};\r\n\r\n\tUtils.prototype._processBooleanColumn = function (c) {\r\n\t\treturn this._configInput(c, {type: \"checkbox\"});\r\n\r\n\t};\r\n\r\n\t/* Common processes */\r\n\r\n\tUtils.prototype._commonProcessColumn = function (c) {\r\n\r\n\t\tvar config = {\r\n\t\t\ttemplate: {},\r\n\t\t\tformat: {\r\n\t\t\t\tdimension: c.id\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (c.title && c.title[this.lang.toUpperCase()]) {\r\n\t\t\tconfig.template.title = c.title[this.lang.toUpperCase()];\r\n\t\t}\r\n\r\n\t\treturn config;\r\n\t};\r\n\r\n\tUtils.prototype._configTreeFromCodelist = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tcodes = domain.codes,\r\n\t\t\tcl;\r\n\r\n\t\tif (!Array.isArray(codes) || codes.length > 1) {\r\n\t\t\tlog.warn(\"Invalid domain.codes attributes\");\r\n\t\t}\r\n\r\n\t\tcl = codes[0];\r\n\r\n\t\tif (!cl.idCodeList) {\r\n\t\t\tlog.error(\"Impossible to find idCodeList\");\r\n\t\t}\r\n\r\n\t\t//configure code list\r\n\t\tconfig.cl = {};\r\n\t\tconfig.cl.uid = cl.idCodeList;\r\n\t\tconfig.cl.version = cl.version;\r\n\r\n\t\t//configure selector\r\n\t\t//html selector configuration\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"tree\";\r\n\t\tconfig.selector.lazy = true;\r\n\t\tconfig.selector.hideFilter = true;\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configTreeFromSource = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tcodes = domain.codes,\r\n\t\t\tcl;\r\n\r\n\t\tif (!Array.isArray(codes) || codes.length > 1) {\r\n\t\t\tlog.warn(\"Invalid domain.codes attributes\");\r\n\t\t}\r\n\r\n\t\tcl = codes[0];\r\n\r\n\t\tif (!cl.codes) {\r\n\t\t\tlog.error(\"Impossible to find codes\");\r\n\t\t}\r\n\r\n\t\t//configure selector\r\n\t\t//html selector configuration\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"tree\";\r\n\t\tconfig.selector.source = _.map(cl.codes, _.bind(function (obj) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: obj.code,\r\n\t\t\t\tlabel: obj.label[this.lang.toUpperCase()]\r\n\t\t\t}\r\n\t\t}, this));\r\n\t\tconfig.selector.hideFilter = true;\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configDropdownFromPeriod = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tperiod = domain.period;\r\n\r\n\t\t//configure selector\r\n\t\t//html selector configuration\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"dropdown\";\r\n\t\tconfig.selector.from = period.from;\r\n\t\tconfig.selector.to = period.to;\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configTreeFromPeriod = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tperiod = domain.period;\r\n\r\n\t\t//configure selector\r\n\t\t//html selector configuration\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"tree\";\r\n\t\tconfig.selector.from = period.from;\r\n\t\tconfig.selector.to = period.to;\r\n\t\tconfig.selector.hideFilter = true;\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configDropdownFromTimelist = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\ttimelist = domain.timeList || [],\r\n\t\t\tformat = this._getTimeFormat(timelist[0]);\r\n\r\n\t\t//configure selector\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"dropdown\";\r\n\t\tconfig.selector.source = _.map(timelist, _.bind(function (obj) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: obj,\r\n\t\t\t\tlabel: new Moment(obj, format).format(this._getTimeLabelFormat(obj))\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configTreeFromTimelist = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\ttimelist = domain.timeList || [],\r\n\t\t\tformat = this._getTimeFormat(timelist[0]);\r\n\r\n\t\t//configure selector\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"tree\";\r\n\t\tconfig.selector.source = _.map(timelist, _.bind(function (obj) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: obj,\r\n\t\t\t\tlabel: new Moment(obj, format).format(this._getTimeLabelFormat(obj))\r\n\t\t\t}\r\n\t\t}, this));\r\n\t\tconfig.selector.hideFilter = true;\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configDropdownFromSource = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tcodes = domain.codes,\r\n\t\t\tcl;\r\n\r\n\t\tif (!Array.isArray(codes) || codes.length > 1) {\r\n\t\t\tlog.warn(\"Invalid domain.codes attributes\");\r\n\t\t}\r\n\r\n\t\tcl = codes[0];\r\n\r\n\t\tif (!cl.codes) {\r\n\t\t\tlog.error(\"Impossible to find codes\");\r\n\t\t}\r\n\r\n\t\t//configure selector\r\n\t\t//html selector configuration\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"dropdown\";\r\n\t\tconfig.selector.source = _.map(cl.codes, _.bind(function (obj) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: obj.code,\r\n\t\t\t\tlabel: obj.label[this.lang.toUpperCase()]\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configDropdownFromCodelist = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tcodes = domain.codes,\r\n\t\t\tcl;\r\n\r\n\t\tif (!Array.isArray(codes) || codes.length > 1) {\r\n\t\t\tlog.warn(\"Invalid domain.codes attributes\");\r\n\t\t}\r\n\r\n\t\tcl = codes[0];\r\n\r\n\t\tif (!cl.idCodeList) {\r\n\t\t\tlog.error(\"Impossible to find idCodeList\");\r\n\t\t}\r\n\r\n\t\t//configure code list\r\n\t\tconfig.cl = {};\r\n\t\tconfig.cl.uid = cl.idCodeList;\r\n\t\tconfig.cl.version = cl.version;\r\n\r\n\t\t//configure selector\r\n\t\t//html selector configuration\r\n\t\tconfig.selector = {};\r\n\t\tconfig.selector.id = \"dropdown\";\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configTimeFromPeriod = function (c) {\r\n\r\n\t\t/* ~~~~~~ Selector time\r\n\t\t var config = {},\r\n\t\t domain = c.domain || {},\r\n\t\t period = domain.period,\r\n\t\t from = String(period.from),\r\n\t\t to = String(period.to),\r\n\t\t //from = String(period.from).substring(0, String(period.from).length - 2),\r\n\t\t //to = String(period.to).substring(0, String(period.to).length - 2),\r\n\t\t format = this._getTimeFormat(from);\r\n\r\n\t\t //configure selector\r\n\t\t config.selector = {\r\n\t\t config: {}\r\n\t\t };\r\n\t\t config.selector.id = \"time\";\r\n\t\t config.selector.config.minDate = new Moment(from, format);\r\n\t\t config.selector.config.maxDate = new Moment(to, format);\r\n\t\t config.selector.config.format = this._getTimeLabelFormat(from);\r\n\r\n\t\t if (from.length < 5) {\r\n\t\t config.selector.config.viewMode = \"years\";\r\n\t\t }\r\n\r\n\t\t config.format = {\r\n\t\t output : \"time\"\r\n\t\t };\r\n\t\t */\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tperiod = domain.period,\r\n\t\t\tfrom = String(period.from),\r\n\t\t\tto = String(period.to);\r\n\r\n\t\t//configure selector\r\n\t\tconfig.selector = {\r\n\t\t\tconfig: {}\r\n\t\t};\r\n\r\n\t\tconfig.selector.id = \"tree\";\r\n\t\tconfig.selector.from = parseInt(from, 10);\r\n\t\tconfig.selector.to = parseInt(to, 10);\r\n\t\tconfig.selector.hideFilter = true;\r\n\t\tconfig.format = {\r\n\t\t\toutput: \"time\"\r\n\t\t};\r\n\r\n\t\treturn config;\r\n\t};\r\n\r\n\tUtils.prototype._configRangeFromPeriod = function (c) {\r\n\r\n\t\tvar config = {},\r\n\t\t\tdomain = c.domain || {},\r\n\t\t\tperiod = domain.period;\r\n\r\n\t\t//configure selector\r\n\t\tconfig.selector = {\r\n\t\t\tconfig: {}\r\n\t\t};\r\n\r\n\t\tconfig.selector.id = \"range\";\r\n\t\tconfig.selector.config.min = period.from;\r\n\t\tconfig.selector.config.max = period.to;\r\n\t\tconfig.selector.config.type = \"double\";\r\n\t\tconfig.selector.config.prettify_enabled = false;\r\n\r\n\t\treturn config;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._configInput = function (c, o) {\r\n\r\n\t\tvar config = {\r\n\t\t\tselector: {},\r\n\t\t\tformat: {\r\n\t\t\t\toutput: o.output || \"enumeration\"\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconfig.selector.id = \"input\";\r\n\t\tconfig.selector.type = o.type || \"text\";\r\n\r\n\t\treturn config;\r\n\t};\r\n\r\n\tUtils.prototype._configTemporalColumn = function (c) {\r\n\r\n\t\tvar domain = c.domain || {},\r\n\t\t\tperiod = domain.period,\r\n\t\t\ttimelist = domain.timeList;\r\n\r\n\t\tif (period && period.from && period.to) {\r\n\t\t\t//return this._configRangeFromPeriod(c);\r\n\t\t\t//return this._configTimeFromPeriod(c);\r\n\t\t\t//return this._configDropdownFromPeriod(c);\r\n\t\t\treturn this._configTreeFromPeriod(c);\r\n\t\t}\r\n\r\n\t\tif (timelist) {\r\n\t\t\t//return this._configDropdownFromTimelist(c);\r\n\t\t\treturn this._configTreeFromTimelist(c);\r\n\t\t}\r\n\r\n\t\t//Default set year range\r\n\t\tlog.warn(\"Column \" + c.id + \" set with default time period range.\");\r\n\r\n\t\tc.domain = {\r\n\t\t\tperiod: {\r\n\t\t\t\tfrom: C.defaultPeriodFrom,\r\n\t\t\t\tto: C.defaultPeriodTo\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn this._configTimeFromPeriod(c);\r\n\t};\r\n\r\n\tUtils.prototype._getTimeFormat = function (s) {\r\n\r\n\t\tvar format;\r\n\r\n\t\tswitch (String(s).length) {\r\n\t\t\tcase 4 :\r\n\t\t\t\tformat = \"YYYY\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tformat = \"YYYY MM\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tformat = \"YYYY MM DD\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 12:\r\n\t\t\t\tformat = \"YYYY MM DD hh mm\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 14:\r\n\t\t\t\tformat = \"YYYY MM DD hh mm ss\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tlog.warn(\"Impossible to find time format for: \" + format);\r\n\t\t}\r\n\r\n\t\treturn format;\r\n\r\n\t};\r\n\r\n\tUtils.prototype._getTimeLabelFormat = function (s) {\r\n\r\n\t\tif (this.timeLabelFormat) {\r\n\t\t\treturn this.timeLabelFormat;\r\n\t\t}\r\n\r\n\t\tvar format;\r\n\r\n\t\tswitch (String(s).length) {\r\n\t\t\tcase 4 :\r\n\t\t\t\tformat = \"YYYY\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tformat = \"L\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tformat = \"L\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase 14:\r\n\t\t\t\tformat = \"lll\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tlog.warn(\"Impossible to find time label format for: \" + format);\r\n\t\t}\r\n\r\n\t\treturn format;\r\n\r\n\t};\r\n\r\n\t/*   /!* Revert Process *!/\r\n\t /!**\r\n\t * Extracts a blank selection from FENIX process\r\n\t * default values\r\n\t * @param {Object} filter\r\n\t * @return {Object} filter configuration\r\n\t *!/\r\n\t Utils.prototype.revertProcess = function (filter) {\r\n\r\n\t var configuration = {};\r\n\r\n\t if (Array.isArray(filter)) {\r\n\r\n\t _.each(filter, _.bind(function ( step ) {\r\n\r\n\t var fn = \"_revert_\" + step.name;\r\n\r\n\t if ( $.isFunction(this[fn]) && step.parameters) {\r\n\t configuration[step.name] = $.extend(true, this[fn](step));\r\n\t } else {\r\n\t log.error(fn + \" is not a valid reverse function\");\r\n\t }\r\n\r\n\t }, this));\r\n\t }\r\n\r\n\t return configuration;\r\n\r\n\t };\r\n\r\n\t Utils.prototype._revert_filter = function (step) {\r\n\t log.info(\"_revert_filter \" + JSON.stringify(step));\r\n\r\n\t var self = this,\r\n\t result = {},\r\n\t parameters = step.parameters,\r\n\t rows = parameters.rows,\r\n\t columns = parameters.columns;\r\n\r\n\t _.each(rows, function ( obj , key) {\r\n\r\n\t if ( obj.time ) {\r\n\t result[key] = self._revert_time_row(obj);\r\n\t } else {\r\n\t result[key] = self._revert_codes_row(obj);\r\n\t }\r\n\r\n\t });\r\n\r\n\t return result;\r\n\t };\r\n\r\n\t Utils.prototype._revert_time_row = function ( step ) {\r\n\r\n\t console.log(step)\r\n\r\n\t };\r\n\r\n\t Utils.prototype._revert_codes_row = function ( step ) {\r\n\r\n\t console.log(step)\r\n\r\n\r\n\t };\r\n\r\n\t Utils.prototype._revert_group = function (step) {\r\n\t log.info(\"_revert_group \" + JSON.stringify(step));\r\n\r\n\r\n\t return;\r\n\t };\r\n\r\n\t Utils.prototype._revert_order = function (step) {\r\n\t log.info(\"_revert_order \" + JSON.stringify(step));\r\n\r\n\t return;\r\n\t };\r\n\t */\r\n\t/* Validation */\r\n\r\n\tUtils.prototype._isFenixResource = function (res) {\r\n\r\n\t\tvar valid = true,\r\n\t\t\terrors = [],\r\n\t\t\tresourceType = this.getNestedProperty(\"metadata.meContent.resourceRepresentationType\", res);\r\n\r\n\t\tif (!res.hasOwnProperty(\"metadata\")) {\r\n\t\t\terrors.push({code: ERR.INVALID_METADATA});\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\r\n\t\tif (valid && !res.metadata.hasOwnProperty(\"dsd\")) {\r\n\t\t\terrors.push({code: ERR.INVALID_DSD});\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\r\n\t\t//NOT need field for FENIX GEOGRAPHIC RESOURCE\r\n\t\tif (resourceType === \"dataset\" && valid && (!res.metadata.dsd.hasOwnProperty(\"columns\") || !Array.isArray(res.metadata.dsd.columns))) {\r\n\t\t\terrors.push({code: ERR.INVALID_COLUMNS});\r\n\t\t}\r\n\r\n\t\treturn errors.length > 0 ? errors : valid;\r\n\t};\r\n\r\n\tUtils.prototype._isFenixColumn = function (c) {\r\n\r\n\t\tvar valid = true,\r\n\t\t\terrors = [];\r\n\r\n\t\tif (!c.hasOwnProperty(\"dataType\")) {\r\n\t\t\terrors.push({code: ERR.INVALID_COLUMN_DATATYPE});\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\r\n\t\treturn errors.length > 0 ? errors : valid;\r\n\t};\r\n\r\n\tUtils.prototype.assign = function (obj, prop, value) {\r\n\t\tif (typeof prop === \"string\")\r\n\t\t\tprop = prop.split(\".\");\r\n\r\n\t\tif (prop.length > 1) {\r\n\t\t\tvar e = prop.shift();\r\n\t\t\tthis.assign(obj[e] =\r\n\t\t\t\t\tObject.prototype.toString.call(obj[e]) === \"[object Object]\"\r\n\t\t\t\t\t\t? obj[e]\r\n\t\t\t\t\t\t: {},\r\n\t\t\t\tprop,\r\n\t\t\t\tvalue);\r\n\t\t} else {\r\n\t\t\tobj[prop[0]] = value;\r\n\t\t}\r\n\t};\r\n\r\n\tUtils.prototype.getNestedProperty = function (path, obj) {\r\n\r\n\t\tvar obj = $.extend(true, {}, obj),\r\n\t\t\tarr = path.split(\".\");\r\n\r\n\t\twhile (arr.length && (obj = obj[arr.shift()]));\r\n\r\n\t\treturn obj;\r\n\r\n\t};\r\n\r\n\r\n\treturn new Utils();\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/index.js\n ** module id = 1\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\r\n    var define = require('amdefine')(module);\r\n}\r\n\r\ndefine(function ( ) {\r\n\r\n    'use strict';\r\n\r\n    var prefix = \"\";\r\n\r\n    return {\r\n\r\n        //Utils\r\n        INVALID_FENIX_RESOURCE: prefix + \"invalid_fenix_resource\",\r\n        INVALID_METADATA: prefix + \"invalid_metadata\",\r\n        INVALID_DSD: prefix + \"invalid_dsd\",\r\n        INVALID_COLUMNS: prefix + \"invalid_dsd\",\r\n        INVALID_FENIX_COLUMN: prefix + \"invalid_fenix_column\",\r\n        INVALID_COLUMN_DATATYPE : prefix + \"invalid_column_datatype\",\r\n        UNKNOWN_FENIX_COLUMN_DATATYPE :prefix + \"unknown_fenix_column_datatype\",\r\n\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/errors.js\n ** module id = 2\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\r\n    var define = require('amdefine')(module);\r\n}\r\n\r\ndefine(function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        forbiddenSubjects: [\"value\"],\r\n        exclude: [], //exclude id\r\n        common: {},\r\n        lang: 'EN',\r\n        defaultPeriodFrom: 1970,\r\n        defaultPeriodTo: 2017\r\n\r\n    }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/config.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"loglevel\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"handlebars\"\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}